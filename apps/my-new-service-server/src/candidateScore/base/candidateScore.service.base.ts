/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  CandidateScore as PrismaCandidateScore,
  RankingAlgorithm as PrismaRankingAlgorithm,
} from "@prisma/client";

export class CandidateScoreServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CandidateScoreCountArgs, "select">
  ): Promise<number> {
    return this.prisma.candidateScore.count(args);
  }

  async candidateScores(
    args: Prisma.CandidateScoreFindManyArgs
  ): Promise<PrismaCandidateScore[]> {
    return this.prisma.candidateScore.findMany(args);
  }
  async candidateScore(
    args: Prisma.CandidateScoreFindUniqueArgs
  ): Promise<PrismaCandidateScore | null> {
    return this.prisma.candidateScore.findUnique(args);
  }
  async createCandidateScore(
    args: Prisma.CandidateScoreCreateArgs
  ): Promise<PrismaCandidateScore> {
    return this.prisma.candidateScore.create(args);
  }
  async updateCandidateScore(
    args: Prisma.CandidateScoreUpdateArgs
  ): Promise<PrismaCandidateScore> {
    return this.prisma.candidateScore.update(args);
  }
  async deleteCandidateScore(
    args: Prisma.CandidateScoreDeleteArgs
  ): Promise<PrismaCandidateScore> {
    return this.prisma.candidateScore.delete(args);
  }

  async getRankingAlgorithm(
    parentId: string
  ): Promise<PrismaRankingAlgorithm | null> {
    return this.prisma.candidateScore
      .findUnique({
        where: { id: parentId },
      })
      .rankingAlgorithm();
  }
}

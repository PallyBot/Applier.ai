/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  RankingAlgorithm as PrismaRankingAlgorithm,
  CandidateScore as PrismaCandidateScore,
} from "@prisma/client";

export class RankingAlgorithmServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RankingAlgorithmCountArgs, "select">
  ): Promise<number> {
    return this.prisma.rankingAlgorithm.count(args);
  }

  async rankingAlgorithms(
    args: Prisma.RankingAlgorithmFindManyArgs
  ): Promise<PrismaRankingAlgorithm[]> {
    return this.prisma.rankingAlgorithm.findMany(args);
  }
  async rankingAlgorithm(
    args: Prisma.RankingAlgorithmFindUniqueArgs
  ): Promise<PrismaRankingAlgorithm | null> {
    return this.prisma.rankingAlgorithm.findUnique(args);
  }
  async createRankingAlgorithm(
    args: Prisma.RankingAlgorithmCreateArgs
  ): Promise<PrismaRankingAlgorithm> {
    return this.prisma.rankingAlgorithm.create(args);
  }
  async updateRankingAlgorithm(
    args: Prisma.RankingAlgorithmUpdateArgs
  ): Promise<PrismaRankingAlgorithm> {
    return this.prisma.rankingAlgorithm.update(args);
  }
  async deleteRankingAlgorithm(
    args: Prisma.RankingAlgorithmDeleteArgs
  ): Promise<PrismaRankingAlgorithm> {
    return this.prisma.rankingAlgorithm.delete(args);
  }

  async findCandidateScores(
    parentId: string,
    args: Prisma.CandidateScoreFindManyArgs
  ): Promise<PrismaCandidateScore[]> {
    return this.prisma.rankingAlgorithm
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .candidateScores(args);
  }
}

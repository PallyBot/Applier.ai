/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  VoiceRecording as PrismaVoiceRecording,
  Interaction as PrismaInteraction,
} from "@prisma/client";

export class VoiceRecordingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VoiceRecordingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.voiceRecording.count(args);
  }

  async voiceRecordings(
    args: Prisma.VoiceRecordingFindManyArgs
  ): Promise<PrismaVoiceRecording[]> {
    return this.prisma.voiceRecording.findMany(args);
  }
  async voiceRecording(
    args: Prisma.VoiceRecordingFindUniqueArgs
  ): Promise<PrismaVoiceRecording | null> {
    return this.prisma.voiceRecording.findUnique(args);
  }
  async createVoiceRecording(
    args: Prisma.VoiceRecordingCreateArgs
  ): Promise<PrismaVoiceRecording> {
    return this.prisma.voiceRecording.create(args);
  }
  async updateVoiceRecording(
    args: Prisma.VoiceRecordingUpdateArgs
  ): Promise<PrismaVoiceRecording> {
    return this.prisma.voiceRecording.update(args);
  }
  async deleteVoiceRecording(
    args: Prisma.VoiceRecordingDeleteArgs
  ): Promise<PrismaVoiceRecording> {
    return this.prisma.voiceRecording.delete(args);
  }

  async getInteraction(parentId: string): Promise<PrismaInteraction | null> {
    return this.prisma.voiceRecording
      .findUnique({
        where: { id: parentId },
      })
      .interaction();
  }
}
